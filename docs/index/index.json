{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"imagePickerController:didFinishPickingMediaWithInfo:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontrollerdidcancel(_:)","title":"imagePickerControllerDidCancel:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"}],"path":"\/documentation\/tikiclient\/capturescan","title":"CaptureScan","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/init","title":"init","type":"method"}],"path":"\/documentation\/tikiclient\/cryptoexportimportmanager","title":"CryptoExportImportManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/init()","title":"init","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didfailwitherror:)","title":"locationManager:didFailWithError:","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didupdatelocations:)","title":"locationManager:didUpdateLocations:","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanagerdidchangeauthorization(_:)","title":"locationManagerDidChangeAuthorization:","type":"method"}],"path":"\/documentation\/tikiclient\/locationdatamanager","title":"LocationDataManager","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclientversionnumber","title":"TikiClientVersionNumber","type":"var"},{"path":"\/documentation\/tikiclient\/tikiclientversionstring","title":"TikiClientVersionString","type":"var"}],"path":"\/documentation\/tikiclient","title":"TikiClient","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountservice","title":"AccountService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authservice\/registeraddress(userid:providerid:pubkey:completion:)","title":"func registerAddress(userId: String, providerId: String, pubKey: String, completion: (_ sucess: String?, _ error: String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/authservice\/token(providerid:secret:scopes:address:completion:)","title":"func token(providerId: String, secret: String, scopes: [String], address: String?, completion: (_ sucess: String?, _ error: String?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/authservice","title":"AuthService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontrollerdidcancel(_:)","title":"func imagePickerControllerDidCancel(UIImagePickerController)","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/start(onfinish:)","title":"func start(onFinish: (UIImage?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/capturescan","title":"CaptureScan","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/captureservice\/publish(images:token:completion:)","title":"func publish(images: [UIImage], token: String, completion: (String?, Error?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/captureservice\/receipt(receiptid:token:completion:)","title":"func receipt(receiptId: String, token: String, completion: (_ success: String?, _ error: String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/captureservice\/scan(onimage:)","title":"func scan(onImage: (UIImage?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/captureservice","title":"CaptureService","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/criptoutils\/decodeseckeyfromdata(seckeydata:isprivate:)","title":"static func decodeSecKeyFromData(secKeyData: Data, isPrivate: Bool) throws -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/criptoutils\/exportkeyaspem(_:isprivatekey:)","title":"static func exportKeyAsPEM(SecKey, isPrivateKey: Bool) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/criptoutils\/exportpublickey(_:base64encodingoptions:)","title":"static func exportPublicKey(Data, base64EncodingOptions: Data.Base64EncodingOptions) -> String?","type":"method"}],"path":"\/documentation\/tikiclient\/criptoutils","title":"CriptoUtils","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/pemkeyfromderkey(_:)","title":"func PEMKeyFromDERKey(Data) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/bytesneededforrepresentinginteger(_:)","title":"func bytesNeededForRepresentingInteger(Int) -> Int","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/encodeasn1lengthparameter(_:buffer:)","title":"func encodeASN1LengthParameter(Int, buffer: UnsafeMutablePointer<UInt8>) -> Int","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportecpublickeytoder(_:keytype:keysize:)","title":"func exportECPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportecpublickeytopem(_:keytype:keysize:)","title":"func exportECPublicKeyToPEM(Data, keyType: String, keySize: Int) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportpublickeytoder(_:keytype:keysize:)","title":"func exportPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data?","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportpublickeytopem(_:keysize:)","title":"func exportPublicKeyToPEM(Data, keySize: Int) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportrsapublickeytoder(_:keytype:keysize:)","title":"func exportRSAPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportrsapublickeytopem(_:keytype:keysize:)","title":"func exportRSAPublicKeyToPEM(Data, keyType: String, keySize: Int) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/importpublickeyreferencefromdercertificate(_:)","title":"func importPublicKeyReferenceFromDERCertificate(Data) -> SecKey?","type":"method"}],"path":"\/documentation\/tikiclient\/cryptoexportimportmanager","title":"CryptoExportImportManager","type":"class"},{"path":"\/documentation\/tikiclient\/email","title":"Email","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailrepository\/deleteemailtoken(email:)","title":"static func DeleteEmailToken(email: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailrepository\/readallemail()","title":"static func ReadAllEmail() -> [EmailAuthTokenResponse]","type":"method"},{"path":"\/documentation\/tikiclient\/emailrepository\/reademailtoken(email:)","title":"static func ReadEmailToken(email: String) -> AuthToken","type":"method"},{"path":"\/documentation\/tikiclient\/emailrepository\/saveemailtoken(authtoken:email:)","title":"static func SaveEmailToken(authToken: AuthToken, email: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailrepository\/updateemailtoken(authtoken:email:)","title":"static func UpdateEmailToken(authToken: AuthToken, email: String)","type":"method"}],"path":"\/documentation\/tikiclient\/emailrepository","title":"EmailRepository","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailservice\/account(email:)","title":"func account(email: String) -> AuthToken","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/login(_:_:_:oncomplete:)","title":"func login(EmailProviderEnum, String, String, onComplete: (() -> Void)?)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/refresh(_:_:_:_:)","title":"func refresh(EmailProviderEnum, String, String, String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/setauthstate(_:)","title":"func setAuthState(OIDAuthState?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailservice\/accounts()","title":"static func accounts() -> [Account]","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/base64convert(base64string:)","title":"static func base64Convert(base64String: String?) -> UIImage","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/clearemailindexlist(email:)","title":"static func clearEmailIndexList(email: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/continueoauthlogin(url:)","title":"static func continueOauthlogin(url: URL)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/decodemessageattachment(attachmentbody:)","title":"static func decodeMessageAttachment(attachmentBody: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/getemail(email:)","title":"static func getEmail(email: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/getemailmensages(emailtoken:)","title":"static func getEmailMensages(emailToken: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/keepgetemaillist(email:usertoken:pagetoken:)","title":"static func keepGetEmailList(email: String, userToken: String, pageToken: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/logout(email:)","title":"static func logout(email: String)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/publishimage(images:token:completion:)","title":"static func publishImage(images: [UIImage], token: String, completion: (String?, Error?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/publishpdf(pdf:token:completion:)","title":"static func publishPdf(pdf: PDFDocument, token: String, completion: (String?, Error?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/receipt(receiptid:token:completion:)","title":"static func receipt(receiptId: String, token: String, completion: (_ success: String?, _ error: String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/emailservice\/verifystatus(email:)","title":"static func verifyStatus(email: String) -> AccountStatus","type":"method"}],"path":"\/documentation\/tikiclient\/emailservice","title":"EmailService","type":"class"},{"path":"\/documentation\/tikiclient\/keyrepository","title":"KeyRepository","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/keyservice\/repository","title":"static let repository: KeyRepository","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/keyservice\/address(b64pubkey:)","title":"static func address(b64PubKey: String) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/generate()","title":"static func generate() -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/get(providerid:userid:isprivate:)","title":"static func get(providerId: String, userId: String, isPrivate: Bool) -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/publickeyb64(privatekey:)","title":"static func publicKeyB64(privateKey: SecKey) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/save(_:service:key:)","title":"static func save(Data, service: String, key: String)","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/sign(message:privatekey:)","title":"static func sign(message: String, privateKey: SecKey) -> String?","type":"method"}],"path":"\/documentation\/tikiclient\/keyservice","title":"KeyService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/license\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/license\/create(token:postlicenserequest:completion:)","title":"func create(token: String, postLicenseRequest: LicenseRequest, completion: (String?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/license","title":"License","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/authorizationstatus","title":"var authorizationStatus: CLAuthorizationStatus?","type":"property"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager","title":"var locationManager: CLLocationManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanagerdidchangeauthorization(_:)","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/tikiclient\/locationdatamanager\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/locationdatamanager","title":"LocationDataManager","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclient\/auth","title":"static let auth: AuthService","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/capture","title":"static let capture: CaptureService","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/config","title":"static var config: Config?","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/email","title":"static let email: EmailService","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/license","title":"static let license: License","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/location","title":"static let location: LocationDataManager","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/tracking","title":"static let tracking: Tracking","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/userid","title":"static var userId: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclient\/configuration(config:)","title":"static func configuration(config: Config)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/createlicense(completion:onerror:)","title":"static func createLicense(completion: (String?) -> Void, onError: (String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/initialize(userid:completion:)","title":"static func initialize(userId: String, completion: (String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/loginemail(clientid:completion:)","title":"static func loginEmail(clientID: String, completion: () -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/terms(completion:onerror:)","title":"static func terms(completion: (String?) -> Void, onError: (String?) -> Void) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/verifyemail(email:)","title":"static func verifyEmail(email: String) -> AuthToken","type":"method"}],"path":"\/documentation\/tikiclient\/tikiclient","title":"TikiClient","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tracking\/asktotrack(completion:)","title":"func askToTrack(completion: (ATTrackingManager.AuthorizationStatus) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tracking\/gettrackingidentifier()","title":"func getTrackingIdentifier() -> UUID?","type":"method"},{"path":"\/documentation\/tikiclient\/tracking\/istrackingaccessavailable()","title":"func isTrackingAccessAvailable() -> Bool","type":"method"}],"path":"\/documentation\/tikiclient\/tracking","title":"Tracking","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tikiclient\/usecase\/init(usecase:)","title":"init(usecase: UsecaseCommon)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tikiclient\/usecase\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/custom(usecase:)","title":"static func custom(usecase: String) -> Usecase","type":"method"},{"path":"\/documentation\/tikiclient\/usecase\/from(usecase:)","title":"static func from(usecase: String) -> Usecase","type":"method"}],"path":"\/documentation\/tikiclient\/usecase","title":"Usecase","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/==(_:_:)","title":"static func == (Account, Account) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/init(username:provider:)","title":"init(username: String, provider: AccountProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/provider","title":"var provider: AccountProvider","type":"property"},{"path":"\/documentation\/tikiclient\/account\/status","title":"var status: AccountStatus","type":"property"},{"path":"\/documentation\/tikiclient\/account\/username","title":"var username: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/toaccount(accounts:)","title":"static func toAccount(accounts: [EmailAuthTokenResponse]) -> [Account]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/account\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/account\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/account","title":"Account","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/pubkey","title":"let pubKey: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/signature","title":"let signature: String","type":"property"}],"path":"\/documentation\/tikiclient\/authaddrrequest","title":"AuthAddrRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/init(auth:refresh:provider:email:expiration:)","title":"init(auth: String, refresh: String, provider: String, email: String, expiration: Date?)","type":"init"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/auth","title":"let auth: String","type":"property"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/expiration","title":"let expiration: Date?","type":"property"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/provider","title":"let provider: String","type":"property"},{"path":"\/documentation\/tikiclient\/authemailtokenresponse\/refresh","title":"let refresh: String","type":"property"}],"path":"\/documentation\/tikiclient\/authemailtokenresponse","title":"AuthEmailTokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtoken\/init(auth:refresh:provider:expiration:)","title":"init(auth: String, refresh: String, provider: String, expiration: Date?)","type":"init"},{"path":"\/documentation\/tikiclient\/authtoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtoken\/auth","title":"let auth: String","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/expiration","title":"let expiration: Date?","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/provider","title":"let provider: String","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/refresh","title":"let refresh: String","type":"property"}],"path":"\/documentation\/tikiclient\/authtoken","title":"AuthToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtokenresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/tikiclient\/authtokenresponse","title":"AuthTokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/config\/init(providerid:publickey:companyname:companyjurisdiction:tosurl:privacyurl:)","title":"init(providerId: String, publicKey: String, companyName: String, companyJurisdiction: String, tosUrl: String, privacyUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/config\/companyjurisdiction","title":"var companyJurisdiction: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/companyname","title":"var companyName: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/privacyurl","title":"var privacyUrl: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/providerid","title":"var providerId: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/publickey","title":"var publicKey: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/tosurl","title":"var tosUrl: String","type":"property"}],"path":"\/documentation\/tikiclient\/config","title":"Config","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/init(auth:refresh:provider:email:expiration:)","title":"init(auth: String, refresh: String, provider: String, email: String, expiration: Date?)","type":"init"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/auth","title":"let auth: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/expiration","title":"let expiration: Date?","type":"property"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/provider","title":"let provider: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailauthtokenresponse\/refresh","title":"let refresh: String","type":"property"}],"path":"\/documentation\/tikiclient\/emailauthtokenresponse","title":"EmailAuthTokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emaillistresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emaillistresponse\/messages","title":"var messages: [MessageResponse]","type":"property"},{"path":"\/documentation\/tikiclient\/emaillistresponse\/nextpagetoken","title":"var nextPageToken: String?","type":"property"},{"path":"\/documentation\/tikiclient\/emaillistresponse\/resultsizeestimate","title":"var resultSizeEstimate: Int?","type":"property"}],"path":"\/documentation\/tikiclient\/emaillistresponse","title":"EmailListResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/access_token","title":"var access_token: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/expires_in","title":"var expires_in: Int","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/id_token","title":"var id_token: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/scope","title":"var scope: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse\/token_type","title":"var token_type: String","type":"property"}],"path":"\/documentation\/tikiclient\/emailoauthrefeshtokenresponse","title":"EmailOauthRefeshTokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/email_verified","title":"var email_verified: Bool","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/family_name","title":"var family_name: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/given_name","title":"var given_name: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/locale","title":"var locale: String?","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/picture","title":"var picture: String","type":"property"},{"path":"\/documentation\/tikiclient\/emailoauthresponse\/sub","title":"var sub: String","type":"property"}],"path":"\/documentation\/tikiclient\/emailoauthresponse","title":"EmailOauthResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/licenserequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/tikiclient\/licenserequest","title":"LicenseRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageheaderresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageheaderresponse\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messageheaderresponse\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/tikiclient\/messageheaderresponse","title":"MessageHeaderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messagepartbodyresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messagepartbodyresponse\/attachmentid","title":"var attachmentId: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartbodyresponse\/data","title":"var data: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartbodyresponse\/size","title":"var size: Int?","type":"property"}],"path":"\/documentation\/tikiclient\/messagepartbodyresponse","title":"MessagePartBodyResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/body","title":"var body: MessagePartBodyResponse?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/filename","title":"var filename: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/headers","title":"var headers: [MessageHeaderResponse]?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/mimetype","title":"var mimeType: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/partid","title":"var partId: String","type":"property"},{"path":"\/documentation\/tikiclient\/messagepartresponse\/parts","title":"var parts: [MessagePartResponse]?","type":"property"}],"path":"\/documentation\/tikiclient\/messagepartresponse","title":"MessagePartResponse","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageresponse\/==(_:_:)","title":"static func == (MessageResponse, MessageResponse) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageresponse\/historyid","title":"var historyId: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/internaldate","title":"var internalDate: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/labelids","title":"var labelIds: [String]?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/payload","title":"var payload: MessagePartResponse?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/raw","title":"var raw: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/sizeestimate","title":"var sizeEstimate: Int?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/snippet","title":"var snippet: String?","type":"property"},{"path":"\/documentation\/tikiclient\/messageresponse\/threadid","title":"var threadId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/messageresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/messageresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/messageresponse","title":"MessageResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/sender\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/sender\/company","title":"var company: String","type":"property"},{"path":"\/documentation\/tikiclient\/sender\/email","title":"var email: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/sender\/returnlist()","title":"static func returnList() -> [Sender]","type":"method"},{"path":"\/documentation\/tikiclient\/sender\/tostring()","title":"static func toString() -> String","type":"method"}],"path":"\/documentation\/tikiclient\/sender","title":"Sender","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/init(from:)-7ge72","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tikiclient\/use\/init(from:)-8k5xk","title":"init(from: [String : Any])","type":"init"},{"path":"\/documentation\/tikiclient\/use\/init(usecases:destinations:)","title":"init(usecases: [Usecase], destinations: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/destinations","title":"let destinations: [String]?","type":"property"},{"path":"\/documentation\/tikiclient\/use\/usecases","title":"let usecases: [Usecase]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/asdictionary()","title":"func asDictionary() -> [String : [String]?]","type":"method"}],"path":"\/documentation\/tikiclient\/use","title":"Use","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountprovider\/email(_:)","title":"case email(EmailProviderEnum)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountprovider\/toaccountprovider(provider:)","title":"static func toAccountProvider(provider: String) -> AccountProvider?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountprovider\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/accountprovider\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/accountprovider","title":"AccountProvider","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountstatus\/unverified","title":"case unverified","type":"case"},{"path":"\/documentation\/tikiclient\/accountstatus\/verified","title":"case verified","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accountstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/accountstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/accountstatus","title":"AccountStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/accounttype\/email(_:)","title":"case email(EmailProviderEnum)","type":"case"}],"path":"\/documentation\/tikiclient\/accounttype","title":"AccountType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/google","title":"case google","type":"case"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/outlook","title":"case outlook","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/authorizationendpoint()","title":"func authorizationEndpoint() -> URL","type":"method"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/deeplinkreturn()","title":"func deeplinkReturn() -> URL","type":"method"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/tokenendpoint()","title":"func tokenEndpoint() -> URL","type":"method"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/userinfoendpoint()","title":"func userInfoEndpoint() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/emailproviderenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/emailproviderenum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tikiclient\/emailproviderenum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/emailproviderenum","title":"EmailProviderEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/permission\/calendar","title":"case calendar","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/contacts","title":"case contacts","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/health","title":"case health","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/locationalways","title":"case locationAlways","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/locationinuse","title":"case locationInUse","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/medialibrary","title":"case mediaLibrary","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/microphone","title":"case microphone","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/motion","title":"case motion","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/notifications","title":"case notifications","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/photolibrary","title":"case photoLibrary","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/reminders","title":"case reminders","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/speechrecognition","title":"case speechRecognition","type":"case"},{"path":"\/documentation\/tikiclient\/permission\/tracking","title":"case tracking","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/permission\/isauthorized()","title":"func isAuthorized() -> Bool","type":"method"},{"path":"\/documentation\/tikiclient\/permission\/name()","title":"func name() -> String","type":"method"},{"path":"\/documentation\/tikiclient\/permission\/requestauth(_:)","title":"func requestAuth(((Bool) -> Void))","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/permission\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/permission\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/permission","title":"Permission","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/aitraining","title":"case aiTraining","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/analytics","title":"case analytics","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/attribution","title":"case attribution","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/distribution","title":"case distribution","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/personalization","title":"case personalization","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/retargeting","title":"case retargeting","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/support","title":"case support","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/from(_:)","title":"static func from(String) -> UsecaseCommon?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/usecasecommon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tikiclient\/usecasecommon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tikiclient\/usecasecommon\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/usecasecommon","title":"UsecaseCommon","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/swift\/string\/base64decoded()","title":"func base64Decoded() -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/swift\/string\/base64urlsafe()","title":"func base64UrlSafe() -> String","type":"method"},{"path":"\/documentation\/tikiclient\/swift\/string\/removepadding()","title":"func removePadding() -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/swift\/string\/urlencoded()","title":"func urlEncoded() -> String","type":"method"}],"path":"\/documentation\/tikiclient\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/tikiclient\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/tikiclient","title":"TikiClient","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}