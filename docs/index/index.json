{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"imagePickerController:didFinishPickingMediaWithInfo:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontrollerdidcancel(_:)","title":"imagePickerControllerDidCancel:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"}],"path":"\/documentation\/tikiclient\/capturescan","title":"CaptureScan","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/init","title":"init","type":"method"}],"path":"\/documentation\/tikiclient\/cryptoexportimportmanager","title":"CryptoExportImportManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/init()","title":"init","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didfailwitherror:)","title":"locationManager:didFailWithError:","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didupdatelocations:)","title":"locationManager:didUpdateLocations:","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanagerdidchangeauthorization(_:)","title":"locationManagerDidChangeAuthorization:","type":"method"}],"path":"\/documentation\/tikiclient\/locationdatamanager","title":"LocationDataManager","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclientversionnumber","title":"TikiClientVersionNumber","type":"var"},{"path":"\/documentation\/tikiclient\/tikiclientversionstring","title":"TikiClientVersionString","type":"var"}],"path":"\/documentation\/tikiclient","title":"TikiClient","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authservice\/registeraddress(userid:providerid:pubkey:completion:)","title":"func registerAddress(userId: String, providerId: String, pubKey: String, completion: (_ sucess: String?, _ error: String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/authservice\/token(providerid:secret:scopes:address:completion:)","title":"func token(providerId: String, secret: String, scopes: [String], address: String?, completion: (_ sucess: String?, _ error: String?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/authservice","title":"AuthService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/imagepickercontrollerdidcancel(_:)","title":"func imagePickerControllerDidCancel(UIImagePickerController)","type":"method"},{"path":"\/documentation\/tikiclient\/capturescan\/start(onfinish:)","title":"func start(onFinish: (UIImage?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/capturescan","title":"CaptureScan","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/captureservice\/publish(images:token:completion:)","title":"func publish(images: [UIImage], token: String, completion: (String?, Error?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/captureservice\/receipt(receiptid:token:completion:)","title":"func receipt(receiptId: String, token: String, completion: (_ success: String?, _ error: String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/captureservice\/scan(onimage:)","title":"func scan(onImage: (UIImage?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/captureservice","title":"CaptureService","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/criptoutils\/decodeseckeyfromdata(seckeydata:isprivate:)","title":"static func decodeSecKeyFromData(secKeyData: Data, isPrivate: Bool) throws -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/criptoutils\/exportkeyaspem(_:isprivatekey:)","title":"static func exportKeyAsPEM(SecKey, isPrivateKey: Bool) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/criptoutils\/exportpublickey(_:base64encodingoptions:)","title":"static func exportPublicKey(Data, base64EncodingOptions: Data.Base64EncodingOptions) -> String?","type":"method"}],"path":"\/documentation\/tikiclient\/criptoutils","title":"CriptoUtils","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/pemkeyfromderkey(_:)","title":"func PEMKeyFromDERKey(Data) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/bytesneededforrepresentinginteger(_:)","title":"func bytesNeededForRepresentingInteger(Int) -> Int","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/encodeasn1lengthparameter(_:buffer:)","title":"func encodeASN1LengthParameter(Int, buffer: UnsafeMutablePointer<UInt8>) -> Int","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportecpublickeytoder(_:keytype:keysize:)","title":"func exportECPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportecpublickeytopem(_:keytype:keysize:)","title":"func exportECPublicKeyToPEM(Data, keyType: String, keySize: Int) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportpublickeytoder(_:keytype:keysize:)","title":"func exportPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data?","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportpublickeytopem(_:keysize:)","title":"func exportPublicKeyToPEM(Data, keySize: Int) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportrsapublickeytoder(_:keytype:keysize:)","title":"func exportRSAPublicKeyToDER(Data, keyType: String, keySize: Int) -> Data","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/exportrsapublickeytopem(_:keytype:keysize:)","title":"func exportRSAPublicKeyToPEM(Data, keyType: String, keySize: Int) -> String","type":"method"},{"path":"\/documentation\/tikiclient\/cryptoexportimportmanager\/importpublickeyreferencefromdercertificate(_:)","title":"func importPublicKeyReferenceFromDERCertificate(Data) -> SecKey?","type":"method"}],"path":"\/documentation\/tikiclient\/cryptoexportimportmanager","title":"CryptoExportImportManager","type":"class"},{"path":"\/documentation\/tikiclient\/keyrepository","title":"KeyRepository","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/keyservice\/repository","title":"static let repository: KeyRepository","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/keyservice\/address(b64pubkey:)","title":"static func address(b64PubKey: String) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/generate()","title":"static func generate() -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/get(providerid:userid:isprivate:)","title":"static func get(providerId: String, userId: String, isPrivate: Bool) -> SecKey?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/publickeyb64(privatekey:)","title":"static func publicKeyB64(privateKey: SecKey) -> String?","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/save(_:service:key:)","title":"static func save(Data, service: String, key: String)","type":"method"},{"path":"\/documentation\/tikiclient\/keyservice\/sign(message:privatekey:)","title":"static func sign(message: String, privateKey: SecKey) -> String?","type":"method"}],"path":"\/documentation\/tikiclient\/keyservice","title":"KeyService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/license\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/license\/create(token:postlicenserequest:completion:)","title":"func create(token: String, postLicenseRequest: LicenseRequest, completion: (String?) -> Void)","type":"method"}],"path":"\/documentation\/tikiclient\/license","title":"License","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/authorizationstatus","title":"var authorizationStatus: CLAuthorizationStatus?","type":"property"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager","title":"var locationManager: CLLocationManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/locationmanagerdidchangeauthorization(_:)","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/locationdatamanager\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/tikiclient\/locationdatamanager\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/locationdatamanager","title":"LocationDataManager","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclient\/auth","title":"static let auth: AuthService","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/capture","title":"static let capture: CaptureService","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/config","title":"static var config: Config?","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/license","title":"static let license: License","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/tracking","title":"static let tracking: Tracking","type":"property"},{"path":"\/documentation\/tikiclient\/tikiclient\/userid","title":"static var userId: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tikiclient\/configuration(config:)","title":"static func configuration(config: Config)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/createlicense(completion:)","title":"static func createLicense(completion: (String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/initialize(userid:completion:)","title":"static func initialize(userId: String, completion: (String?) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tikiclient\/terms(completion:)","title":"static func terms(completion: (String?) -> Void) -> String","type":"method"}],"path":"\/documentation\/tikiclient\/tikiclient","title":"TikiClient","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/tracking\/asktotrack(completion:)","title":"func askToTrack(completion: (String) -> Void)","type":"method"},{"path":"\/documentation\/tikiclient\/tracking\/gettrackingidentifier()","title":"func getTrackingIdentifier() -> UUID?","type":"method"},{"path":"\/documentation\/tikiclient\/tracking\/istrackingaccessavailable()","title":"func isTrackingAccessAvailable() -> Bool","type":"method"}],"path":"\/documentation\/tikiclient\/tracking","title":"Tracking","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tikiclient\/usecase\/init(usecase:)","title":"init(usecase: UsecaseCommon)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tikiclient\/usecase\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecase\/custom(usecase:)","title":"static func custom(usecase: String) -> Usecase","type":"method"},{"path":"\/documentation\/tikiclient\/usecase\/from(usecase:)","title":"static func from(usecase: String) -> Usecase","type":"method"}],"path":"\/documentation\/tikiclient\/usecase","title":"Usecase","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/pubkey","title":"let pubKey: String","type":"property"},{"path":"\/documentation\/tikiclient\/authaddrrequest\/signature","title":"let signature: String","type":"property"}],"path":"\/documentation\/tikiclient\/authaddrrequest","title":"AuthAddrRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtoken\/init(auth:refresh:provider:expiration:)","title":"init(auth: String, refresh: String, provider: String, expiration: Date?)","type":"init"},{"path":"\/documentation\/tikiclient\/authtoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtoken\/auth","title":"let auth: String","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/expiration","title":"let expiration: Date?","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/provider","title":"let provider: String","type":"property"},{"path":"\/documentation\/tikiclient\/authtoken\/refresh","title":"let refresh: String","type":"property"}],"path":"\/documentation\/tikiclient\/authtoken","title":"AuthToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/authtokenresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/tikiclient\/authtokenresponse","title":"AuthTokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/config\/init(providerid:publickey:companyname:companyjurisdiction:tosurl:privacyurl:)","title":"init(providerId: String, publicKey: String, companyName: String, companyJurisdiction: String, tosUrl: String, privacyUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/config\/companyjurisdiction","title":"var companyJurisdiction: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/companyname","title":"var companyName: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/privacyurl","title":"var privacyUrl: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/providerid","title":"var providerId: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/publickey","title":"var publicKey: String","type":"property"},{"path":"\/documentation\/tikiclient\/config\/tosurl","title":"var tosUrl: String","type":"property"}],"path":"\/documentation\/tikiclient\/config","title":"Config","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/licenserequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/tikiclient\/licenserequest","title":"LicenseRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/init(from:)-7ge72","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tikiclient\/use\/init(from:)-8k5xk","title":"init(from: [String : Any])","type":"init"},{"path":"\/documentation\/tikiclient\/use\/init(usecases:destinations:)","title":"init(usecases: [Usecase], destinations: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/destinations","title":"let destinations: [String]?","type":"property"},{"path":"\/documentation\/tikiclient\/use\/usecases","title":"let usecases: [Usecase]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/use\/asdictionary()","title":"func asDictionary() -> [String : [String]?]","type":"method"}],"path":"\/documentation\/tikiclient\/use","title":"Use","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/aitraining","title":"case aiTraining","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/analytics","title":"case analytics","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/attribution","title":"case attribution","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/distribution","title":"case distribution","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/personalization","title":"case personalization","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/retargeting","title":"case retargeting","type":"case"},{"path":"\/documentation\/tikiclient\/usecasecommon\/support","title":"case support","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/from(_:)","title":"static func from(String) -> UsecaseCommon?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tikiclient\/usecasecommon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tikiclient\/usecasecommon\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tikiclient\/usecasecommon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tikiclient\/usecasecommon\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tikiclient\/usecasecommon","title":"UsecaseCommon","type":"enum"}],"path":"\/documentation\/tikiclient","title":"TikiClient","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}